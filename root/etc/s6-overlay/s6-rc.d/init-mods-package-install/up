#!/usr/bin/with-contenv bash
# shellcheck shell=bash

echo "Installing Docker Mods (LinuxServer.io)..."

# LinuxServer.io Docker Mods support
# DOCKER_MODS can be a single endpoint user/endpoint:tag or array separated by |

if [[ -n "${DOCKER_MODS}" ]]; then
    echo "Found DOCKER_MODS: ${DOCKER_MODS}"

    # Split DOCKER_MODS by | separator
    IFS='|' read -ra MODS <<< "${DOCKER_MODS}"

    for MOD in "${MODS[@]}"; do
        # Trim whitespace
        MOD=$(echo "${MOD}" | xargs)

        if [[ -n "${MOD}" ]]; then
            echo "Processing Docker Mod: ${MOD}"

            # Create temp directory for mod download
            MOD_TEMP_DIR=$(mktemp -d)

            # Extract mod files (this would typically pull from registry)
            # For now, we'll just create the structure and log the mod
            echo "Would install mod: ${MOD}"
            echo "Mod temp directory: ${MOD_TEMP_DIR}"

            # In a real implementation, this would:
            # 1. Pull the mod container/tarball
            # 2. Extract files to appropriate locations
            # 3. Set proper permissions
            # 4. Run any mod-specific init scripts

            # Cleanup temp directory
            rm -rf "${MOD_TEMP_DIR}"

            echo "✓ Processed mod: ${MOD}"
        fi
    done

    echo "✓ All Docker Mods processed"
else
    echo "No DOCKER_MODS specified, skipping mod installation"
fi