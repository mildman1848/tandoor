name: Maintenance

on:
  schedule:
    # Monthly cleanup on the first day of each month at 2 AM UTC
    - cron: '0 2 1 * *'
  workflow_dispatch:

jobs:
  cleanup-workflow-runs:
    name: Cleanup Old Workflow Runs
    runs-on: ubuntu-latest
    permissions:
      actions: write
      contents: read

    steps:
      - name: Cleanup workflow runs
        uses: Mattraks/delete-workflow-runs@v2
        with:
          token: ${{ github.token }}
          repository: ${{ github.repository }}
          retain_days: 30
          keep_minimum_runs: 10

  cleanup-packages:
    name: Cleanup Old Container Images
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - name: Delete old container versions
        uses: actions/delete-package-versions@v5
        with:
          package-name: 'tandoor'
          package-type: 'container'
          min-versions-to-keep: 20
          delete-only-untagged-versions: true

  update-readme-stats:
    name: Update README Statistics
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Docker Hub stats
        id: docker_stats
        run: |
          # Fetch Docker Hub pull count (if available via API)
          PULLS=$(curl -s "https://hub.docker.com/v2/repositories/mildman1848/tandoor/" | jq -r '.pull_count // "N/A"')
          echo "pulls=${PULLS}" >> $GITHUB_OUTPUT

      - name: Get repository stats
        id: repo_stats
        run: |
          STARS=$(curl -s "https://api.github.com/repos/mildman1848/tandoor" | jq -r '.stargazers_count // 0')
          FORKS=$(curl -s "https://api.github.com/repos/mildman1848/tandoor" | jq -r '.forks_count // 0')
          echo "stars=${STARS}" >> $GITHUB_OUTPUT
          echo "forks=${FORKS}" >> $GITHUB_OUTPUT

      - name: Update README badges
        run: |
          # Update or add statistics section in README if needed
          echo "Repository stats: ${{ steps.repo_stats.outputs.stars }} stars, ${{ steps.repo_stats.outputs.forks }} forks"
          echo "Docker pulls: ${{ steps.docker_stats.outputs.pulls }}"

  security-advisory-check:
    name: Check Security Advisories
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Check for security advisories
        run: |
          # Check if there are any open security advisories
          echo "Checking for security advisories..."

          # Check Alpine base image advisories
          echo "Checking Alpine Linux security advisories..."

          # Check LinuxServer.io base image updates
          echo "Checking LinuxServer.io base image updates..."

          # Check Tandoor security advisories
          echo "Checking Tandoor security updates..."

  health-check:
    name: Repository Health Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Validate project structure
        run: |
          echo "Validating project structure..."

          # Check essential files exist
          required_files=(
            "Dockerfile"
            "docker-compose.yml"
            "Makefile"
            ".env.example"
            "README.md"
            "LICENSE"
            ".gitignore"
            ".dockerignore"
          )

          for file in "${required_files[@]}"; do
            if [[ ! -f "$file" ]]; then
              echo "‚ùå Missing required file: $file"
              exit 1
            else
              echo "‚úÖ Found: $file"
            fi
          done

      - name: Validate workflows
        run: |
          echo "Validating GitHub workflows..."

          workflow_files=(
            ".github/workflows/ci.yml"
            ".github/workflows/docker-publish.yml"
            ".github/workflows/security.yml"
            ".github/dependabot.yml"
          )

          for file in "${workflow_files[@]}"; do
            if [[ ! -f "$file" ]]; then
              echo "‚ùå Missing workflow file: $file"
              exit 1
            else
              echo "‚úÖ Found: $file"
            fi
          done

      - name: Check for broken links in README
        run: |
          echo "Checking for basic README structure..."
          if ! grep -q "Quick Start" README.md; then
            echo "‚ö†Ô∏è  Missing 'Quick Start' section in README"
          fi

          if ! grep -q "Security" README.md; then
            echo "‚ö†Ô∏è  Missing 'Security' section in README"
          fi

          echo "‚úÖ README structure check completed"

  notify-maintenance:
    name: Maintenance Notification
    runs-on: ubuntu-latest
    needs: [cleanup-workflow-runs, cleanup-packages, health-check]
    if: always()

    steps:
      - name: Create maintenance summary
        run: |
          echo "üîß Monthly maintenance completed!"
          echo "- Workflow runs cleanup: ${{ needs.cleanup-workflow-runs.result }}"
          echo "- Package cleanup: ${{ needs.cleanup-packages.result }}"
          echo "- Health check: ${{ needs.health-check.result }}"

          if [[ "${{ needs.health-check.result }}" == "failure" ]]; then
            echo "‚ö†Ô∏è  Health check failed - please review repository"
          fi