#!/usr/bin/with-contenv bash
# shellcheck shell=bash

echo "Initializing ${APPLICATION_NAME} configuration..."

# Apply UMASK for file creation (LinuxServer.io standard)
UMASK=${UMASK:-022}
umask "$UMASK"
echo "Applied UMASK: $UMASK"

# Create necessary directories with proper permissions
echo "Creating directory structure..."
mkdir -p /config /data /config/${APPLICATION_NAME} /config/cache /config/logs

# Apply LinuxServer.io standard ownership and permissions (safely)
echo "Setting ownership and permissions..."
# Only change ownership if we have permission, otherwise skip silently
chown -R abc:abc /config /data 2>/dev/null || true
# Only change permissions on directories we can modify
find /config /data -type d -exec chmod 750 {} \; 2>/dev/null || true
find /config /data -type f -exec chmod 640 {} \; 2>/dev/null || true

# Create additional mount directories if they don't exist
for dir in /media /backup; do
    if [[ ! -d "$dir" ]]; then
        mkdir -p "$dir"
        chown abc:abc "$dir" 2>/dev/null || true
        chmod 755 "$dir" 2>/dev/null || true
    fi
done

# Set application-specific directories
${APPLICATION_NAME_UPPER}_CONFIG_DIR="/config/${APPLICATION_NAME}"
${APPLICATION_NAME_UPPER}_CONFIG_FILE="${${APPLICATION_NAME_UPPER}_CONFIG_DIR}/${APPLICATION_NAME}.conf"
${APPLICATION_NAME_UPPER}_CACHE_DIR="/config/cache"
${APPLICATION_NAME_UPPER}_LOG_DIR="/config/logs"

# Create application config directory and file if they don't exist
if [[ ! -d "${${APPLICATION_NAME_UPPER}_CONFIG_DIR}" ]]; then
    mkdir -p "${${APPLICATION_NAME_UPPER}_CONFIG_DIR}"
    chown abc:abc "${${APPLICATION_NAME_UPPER}_CONFIG_DIR}" 2>/dev/null || true
    chmod 750 "${${APPLICATION_NAME_UPPER}_CONFIG_DIR}" 2>/dev/null || true
fi

if [[ ! -f "${${APPLICATION_NAME_UPPER}_CONFIG_FILE}" ]]; then
    echo "Creating initial ${APPLICATION_NAME} configuration file..."
    touch "${${APPLICATION_NAME_UPPER}_CONFIG_FILE}"
    chown abc:abc "${${APPLICATION_NAME_UPPER}_CONFIG_FILE}" 2>/dev/null || true
    chmod 600 "${${APPLICATION_NAME_UPPER}_CONFIG_FILE}" 2>/dev/null || true
    echo "# ${APPLICATION_NAME} configuration file" > "${${APPLICATION_NAME_UPPER}_CONFIG_FILE}"
    echo "# Add your configuration here" >> "${${APPLICATION_NAME_UPPER}_CONFIG_FILE}"
fi

# Create cache directory
if [[ ! -d "${${APPLICATION_NAME_UPPER}_CACHE_DIR}" ]]; then
    mkdir -p "${${APPLICATION_NAME_UPPER}_CACHE_DIR}"
    chown abc:abc "${${APPLICATION_NAME_UPPER}_CACHE_DIR}" 2>/dev/null || true
    chmod 750 "${${APPLICATION_NAME_UPPER}_CACHE_DIR}" 2>/dev/null || true
fi

# Create log directory
if [[ ! -d "${${APPLICATION_NAME_UPPER}_LOG_DIR}" ]]; then
    mkdir -p "${${APPLICATION_NAME_UPPER}_LOG_DIR}"
    chown abc:abc "${${APPLICATION_NAME_UPPER}_LOG_DIR}" 2>/dev/null || true
    chmod 750 "${${APPLICATION_NAME_UPPER}_LOG_DIR}" 2>/dev/null || true
fi

# Create temp directory for application operations
${APPLICATION_NAME_UPPER}_TEMP_DIR="/tmp/${APPLICATION_NAME}"
if [[ ! -d "${${APPLICATION_NAME_UPPER}_TEMP_DIR}" ]]; then
    mkdir -p "${${APPLICATION_NAME_UPPER}_TEMP_DIR}"
    chown abc:abc "${${APPLICATION_NAME_UPPER}_TEMP_DIR}" 2>/dev/null || true
    chmod 755 "${${APPLICATION_NAME_UPPER}_TEMP_DIR}" 2>/dev/null || true
fi

# Validate application installation
echo "Validating ${APPLICATION_NAME} installation..."
if command -v ${APPLICATION_NAME} >/dev/null 2>&1; then
    ${APPLICATION_NAME_UPPER}_VERSION=$({APPLICATION_NAME} --version 2>/dev/null | head -n1 | cut -d' ' -f2 || echo "unknown")
    echo "✓ ${APPLICATION_NAME} version: ${${APPLICATION_NAME_UPPER}_VERSION}"

    # Test application config access (application-specific validation)
    ${APPLICATION_SPECIFIC_VALIDATION}
else
    echo "✗ Error: ${APPLICATION_NAME} binary not found"
    exit 1
fi

# Set environment variables for application
export ${APPLICATION_NAME_UPPER}_CONFIG="${${APPLICATION_NAME_UPPER}_CONFIG_FILE}"
export ${APPLICATION_NAME_UPPER}_CACHE_DIR="${${APPLICATION_NAME_UPPER}_CACHE_DIR}"
export ${APPLICATION_NAME_UPPER}_TEMP_DIR="${${APPLICATION_NAME_UPPER}_TEMP_DIR}"

echo "✓ ${APPLICATION_NAME} configuration initialized successfully."
echo "  Config file: ${${APPLICATION_NAME_UPPER}_CONFIG_FILE}"
echo "  Cache directory: ${${APPLICATION_NAME_UPPER}_CACHE_DIR}"
echo "  Temp directory: ${${APPLICATION_NAME_UPPER}_TEMP_DIR}"
echo "  Log directory: ${${APPLICATION_NAME_UPPER}_LOG_DIR}"