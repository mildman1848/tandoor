# syntax=docker/dockerfile:1
# Dockerfile for ARM64/AArch64 architecture
# Based on LinuxServer.io standards with enhanced security

FROM ghcr.io/linuxserver/baseimage-alpine:arm64v8-3.22

# Set shell options for better error handling
SHELL ["/bin/ash", "-eo", "pipefail", "-c"]

# Build arguments
ARG BUILD_DATE
ARG VERSION
ARG VCS_REF
ARG TANDOOR_VERSION="2.2.6"

# Environment variables for ARM64
ENV ARCH="aarch64"
ENV QEMU_EXECVE=1

# Labels for ARM64
LABEL build_version="mildman1848 version:- ${VERSION} Build-date:- ${BUILD_DATE}"
LABEL maintainer="mildman1848"
LABEL org.opencontainers.image.title="tandoor"
LABEL org.opencontainers.image.description="Recipe management application with database support"
LABEL org.opencontainers.image.url="https://github.com/mildman1848/tandoor"
LABEL org.opencontainers.image.source="https://github.com/mildman1848/tandoor"
LABEL org.opencontainers.image.version="${VERSION}"
LABEL org.opencontainers.image.revision="${VCS_REF}"
LABEL org.opencontainers.image.created="${BUILD_DATE}"
LABEL org.opencontainers.image.licenses="AGPL-3.0"
LABEL org.opencontainers.image.architecture="arm64"
LABEL org.opencontainers.image.platform="linux/arm64"

# Install packages and dependencies for ARM64
RUN set -eux; \
    echo "**** install runtime packages ****"; \
    apk add --no-cache \
        # Add ARM64-specific packages here
        curl \
        wget \
        ca-certificates \
        tzdata; \
    echo "**** install tandoor ****"; \
    # Add ARM64-specific installation steps here
    mkdir -p \
        /app \
        /config \
        /defaults; \
    echo "**** cleanup ****"; \
    apk del --purge; \
    rm -rf \
        /tmp/* \
        /var/cache/apk/* \
        /var/lib/apk/lists/*

# Copy S6 service definitions
COPY root/ /

# Copy application files (if any)
# COPY --from=builder /app/ /app/

# Set permissions
RUN set -eux; \
    chmod +x /etc/s6-overlay/s6-rc.d/*/run 2>/dev/null || true; \
    chmod +x /etc/s6-overlay/s6-rc.d/*/up 2>/dev/null || true; \
    chown -R abc:abc \
        /app \
        /config \
        /defaults

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=5 \
    CMD ps aux | grep tandoor | grep -v grep || exit 1

# Set working directory
WORKDIR /app

# Volume declarations
VOLUME ["/config"]